//
//  PlankModelRuntime.m
//  Autogenerated by plank
//
//  DO NOT EDIT - EDITS WILL BE OVERWRITTEN
//  @generated
//

#import <Foundation/Foundation.h>

#import "PlankModelRuntime.h"

id _Nullable valueOrNil(NSDictionary *dict, NSString *key)
{
    id value = dict[key];
    if (value == nil || value == (id)kCFNull) {
        return nil;
    }
    return value;
}
NSString *debugDescriptionForFields(NSArray *descriptionFields)
{
    NSMutableString *stringBuf = [NSMutableString string];
    NSString *newline = @"\n";
    NSString *format = @"    %@";
    for (id obj in descriptionFields) {
        if ([obj isKindOfClass:[NSArray class]]) {
            NSArray<NSString *> *objArray = (NSArray *)obj;
            for (NSString *element in objArray) {
                [stringBuf appendFormat:format, element];
                if (element != [objArray lastObject]) {
                    [stringBuf appendString:newline];
                }
            }
        } else {
            [stringBuf appendFormat:format, [obj description]];
        }
        if (obj != [descriptionFields lastObject]) {
            [stringBuf appendString:newline];
        }
    }
    return [stringBuf copy];
}
NSUInteger PINIntegerArrayHash(const NSUInteger *subhashes, NSUInteger count)
{
    uint64_t result = subhashes[0];
    for (uint64_t ii = 1; ii < count; ++ii) {
       uint64_t upper = result;
       uint64_t lower = subhashes[ii];
       const uint64_t kMul = 0x9ddfea08eb382d69ULL;
       uint64_t a = (lower ^ upper) * kMul;
       a ^= (a >> 47);
       uint64_t b = (upper ^ a) * kMul;
       b ^= (b >> 47);
       b *= kMul;
       result = b;
    }
    return (NSUInteger)result;
}
